syntax = "proto3";

package task;

option go_package = "api/proto/task";

service TaskService {
  // 节点注册
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  
  // 任务推送流
  rpc SubscribeTasks(RegisterRequest) returns (stream Task) {}
  
  // 更新任务状态
  rpc UpdateTaskStatus(TaskStatus) returns (TaskStatusResponse) {}
}

message RegisterRequest {
  int32 node_id = 1;
  string token = 2;
}

message RegisterResponse {
  bool success = 1;
  string message = 2;
}

message Task {
  string task_id = 1;
  int32 node_id = 2;
  string type = 3;
  map<string, string> params = 4;
  int64 created_at = 5;
}

message TaskStatus {
  string task_id = 1;
  int32 node_id = 2;
  string status = 3;
  string message = 4;
  int64 updated_at = 5;
}

message TaskStatusResponse {
  bool success = 1;
  string message = 2;
} 